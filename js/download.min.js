var downloadCSVList,downloadHTMLList,showDownloadChooser,indexOf=[].indexOf||function(a){for(var b=0,c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1};downloadCSVList=function(){var a,b,c,d,e,f;return animateLoad(),b="q=*",c=new Date,a=c.getMonth()+1,f=1===(""+a).length?"0"+a:a,e=1===(""+c.getDate()).length?"0"+c.getDate():c.getDate(),d=c.getUTCFullYear()+"-"+f+"-"+e,$.get(""+searchParams.apiPath,b,"json").done(function(a){var c,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D;try{if(!0!==a.status)throw Error("Invalid Result");i="      ",j=[],y=["genus","species","subspecies","canonical_sciname","common_name","common_name_source","image","image_caption","image_credit","image_license","major_type","major_subtype","simple_linnean_group","simple_linnean_subgroup","linnean_order","linnean_family","genus_authority","parens_auth_genus","species_authority","parens_auth_species","authority_year","deprecated_scientific","notes","entry","taxon_credit","taxon_credit_date","taxon_author","citation","source","internal_id"],v=["genus","common_name","taxon_credit","linnean_order","linnean_family","genus_authority","species_authority"],t=0,w=a.result;for(u in w)if(x=w[u],l=[],!isNull(x.genus)){for(m in x){n=x[m],f=m.replace(/"/g,'""');try{g=n.replace(/"/g,'""').replace(/&#39;/g,"'")}catch(a){g=""}if(0===t&&indexOf.call(y,f)>=0&&j.push(f.replace(/_/g," ").toTitleCase()),indexOf.call(y,f)>=0){if(/[a-z]+_authority/.test(f))try{if("object"!=typeof x.authority_year){c={};try{isNumber(x.authority_year)?c[x.authority_year]=x.authority_year:isNull(x.authority_year)?(x.species_authority=x.species_authority.replace(/(<\/|<|&lt;|&lt;\/).*?(>|&gt;)/gim,""),/^\(? *((['"])? *([\w\u00C0-\u017F\. \-\&;\[\]]+(,|&|&amp;|&amp;amp;|&#[\w0-9]+;)?)+ *\2) *, *([0-9]{4}) *\)?/im.test(x.species_authority)?(D=x.species_authority.replace(/^\(? *((['"])? *([\w\u00C0-\u017F\.\-\&; \[\]]+(,|&|&amp;|&amp;amp;|&#[\w0-9]+;)?)+ *\2) *, *([0-9]{4}) *\)?/gi,"$5"),x.species_authority=x.species_authority.replace(/^\(? *((['"])? *([\w\u00C0-\u017F\.\-\&; \[\]]+(,|&|&amp;|&amp;amp;|&#[\w0-9]+;)?)+ *\2) *, *([0-9]{4}) *\)?/gi,"$1"),c[D]=D,x.authority_year=c):(isNull(x.species_authority)||console.warn("Failed a match on authority '"+x.species_authority+"'"),c.Unknown="Unknown")):c=JSON.parse(x.authority_year)}catch(a){p=a,console.debug("authority isnt number, null, or object, with bad species_authority '"+x.authority_year+"'"),A=x.authority_year.split(":"),A.length>1?(D=A[1].slice(A[1].search('"')+1,-2),D=D.replace(/"/g,"'"),A[1]='"'+D+'"}',c=JSON.parse(A.join(":"))):(console.warn("Unable to figure out the type of data for `authority_year`: "+p.message,JSON.stringify(x)),console.warn(p.stack))}}else c=x.authority_year;try{r=Object.keys(c)[0],z=c[r],r=r.replace(/&#39;/g,"'"),z=z.replace(/&#39;/g,"'")}catch(a){for(e in c)C=c[e],r=e.replace(/&#39;/g,"'"),z=C.replace(/&#39;/g,"'")}switch(isNull(x.genus_authority)?x.genus_authority=x.species_authority:isNull(x.species_authority)&&(x.species_authority=x.genus_authority),f.split("_")[0]){case"genus":B=g.toTitleCase()+" "+r,toInt(x.parens_auth_genus).toBool()&&(B="("+B+")");break;case"species":B=g.toTitleCase()+" "+z,toInt(x.parens_auth_species).toBool()&&(B="("+B+")")}g=B}catch(a){p=a}indexOf.call(v,f)>=0&&(g=g.toTitleCase()),"image"!==f||isNull(g)||(g=""+uri.urlString+g),l.push('"'+g+'"')}}t++,k=l.join(","),i+="\n"+k}h=j.join(",")+"\n"+i,o="data:text/csv;charset=utf-8,"+encodeURIComponent(h);try{q=o.length/1024/1024}catch(a){q=0}return console.log("Downloadable size: "+q+" MiB"),s='<paper-dialog class="download-file" id="download-csv-file" modal>\n  <h2>Your files are ready</h2>\n  <paper-dialog-scrollable class="dialog-content">\n    <h3>Need data analysis?</h3>\n    <p>\n      api explanation link blurb\n    </p>\n    <h3>Which file type do I want?</h3>\n    <p>\n      A CSV file is readily opened by consumer-grade programs, such as Microsoft Excel or Google Spreadsheets.\n      However, if you wish to replicate the whole database and perform queries, the SQL file is machine-readable,\n      ready for import into a MySQL or MariaDB database by running the <code>source asm-species-'+d+'.sql;</code> in their\n      interactive shell prompts when run from your download directory.\n    </p>\n    <h3>Excel Important Note</h3>\n    <p>\n      Please note that some special characters in names may be decoded incorrectly by Microsoft Excel. If this is a problem, following the steps in <a href="https://github.com/SSARHERPS/SSAR-species-database/blob/master/meta/excel_unicode_readme.md"  onclick=\'window.open(this.href); return false;\' onkeypress=\'window.open(this.href); return false;\'>this README <iron-icon icon="launch"></iron-icon></a> to force Excel to format it correctly.\n    </p>\n    <p class="text-center">\n      <a href="'+o+'" download="asm-species-'+d+'.csv" class="btn btn-default" id="download-csv-summary"><iron-icon icon="file-download"></iron-icon> Download CSV</a>\n      <a href="#" download="asm-species-'+d+'.sql" class="btn btn-default" id="download-sql-summary" disabled><iron-icon icon="file-download"></iron-icon> Download SQL</a>\n    </p>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>',$("#download-csv-file").exists()?$("#download-csv-file").replaceWith(s):$("body").append(s),p$("#download-chooser").close(),q>=2?(console.debug("Large file size triggering blob creation"),downloadDataUriAsBlob("#download-csv-summary")):console.debug("File size is small enough to use a data-uri"),safariDialogHelper("#download-csv-file"),stopLoad()}catch(c){return p=c,stopLoadError("There was a problem creating the CSV file. Please try again later."),console.error("Exception in downloadCSVList ) - "+p.message),console.warn(p.stack),console.warn("Got",a,"from",searchParams.apiPath+"?"+b,a.status)}}).fail(function(){return stopLoadError("There was a problem communicating with the server. Please try again later.")}),!1},downloadHTMLList=function(){return startLoad(),$.get(uri.urlString+"css/download-inline-bootstrap.css").done(function(a){var b,c,d,e,f,g,h;return d=new Date,b=d.getMonth()+1,h=1===(""+b).length?"0"+b:b,f=1===(""+d.getDate()).length?"0"+d.getDate():d.getDate(),e=d.getUTCFullYear()+"-"+h+"-"+f,g='<!doctype html>\n<html lang="en">\n  <head>\n    <title>ASM Species Checklist ver. '+e+'</title>\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta charset="UTF-8"/>\n    <meta name="theme-color" content="#445e14"/>\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\n    <link href=\'http://fonts.googleapis.com/css?family=Droid+Serif:400,700,700italic,400italic|Roboto+Slab:400,700\' rel=\'stylesheet\' type=\'text/css\' />\n    <style type="text/css" id="asm-checklist-inline-stylesheet">\n      '+a+'\n    </style>\n  </head>\n  <body>\n    <div class="container-fluid">\n      <article>\n        <h1 class="text-center">ASM Species Checklist ver. '+e+"</h1>",c="q=*&order=linnean_order,linnean_family,genus,species,subspecies",$.get(""+searchParams.apiPath,c,"json").done(function(a){var b,c;return startLoad(),toastStatusMessage("Please be patient while we create the file for you"),b={action:"render-html",data:a,htmlHeader:g},c=new Worker("js/serviceWorker.min.js"),console.info("Rendering list off-thread"),c.addEventListener("message",function(a){var b,c,d,f,h;if(console.info("Got message back from service worker",a.data),!0!==a.data.done)return console.log("Just an update"),isNull(a.data.updateUser)||toastStatusMessage(a.data.updateUser),!1;if(!0!==a.data.status)return console.warn("Got an error!"),f=isNull(a.data.updateUser)?"Failed to create file":a.data.updateUser,stopLoadError(f,"",1e4),!1;g=a.data.html,c="data:text/html;charset=utf-8,"+encodeURIComponent(g);try{d=c.length/1024/1024}catch(a){d=0}console.log("Downloadable size: "+d+" MiB"),b='<paper-dialog  modal class="download-file" id="download-html-file">\n  <h2>Your file is ready</h2>\n  <paper-dialog-scrollable class="dialog-content">\n    <p class="text-center">\n      <a href="'+c+'" download="asm-species-'+e+'.html" class="btn btn-default" id="download-html-summary"><iron-icon icon="file-download"></iron-icon> Download HTML</a>\n      <div id="pdf-download-placeholder">\n        <paper-spinner active></paper-spinner> Please wait while your PDF creation finishes ...\n      </div>\n    </p>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>',$("#download-html-file").exists()?$("#download-html-file").replaceWith(b):$("body").append(b);try{p$("#download-chooser").close()}catch(a){}return d>=2?(console.debug("Large file size triggering blob creation"),downloadDataUriAsBlob("#download-html-summary")):console.debug("File size is small enough to use a data-uri"),safariDialogHelper("#download-html-file"),stopLoad(),toastStatusMessage("Please wait while we prepare your PDF file...","",7e3),h='<a href="#" disabled class="btn btn-default" id="download-pdf-summary">PDF Creation Failed</a>',console.debug("Posting for PDF"),$.post(uri.urlString+"pdf/pdfwrapper.php","html="+encodeURIComponent(g),"json").done(function(a){var b,c;return console.debug("PDF result",a),a.status?(c=""+uri.urlString+a.file,console.debug(c),b='<a href="'+c+'" download="asm-species-'+e+'.pdf" class="btn btn-default" id="download-pdf-summary"><iron-icon icon="file-download"></iron-icon> Download PDF</a>',$("#download-html-file #download-html-summary").after(b)):(console.error("Couldn't make PDF file"),$("#download-html-file #download-html-summary").after(h))}).error(function(a,b){return console.error("Wasn't able to fetch PDF"),$("#download-html-file #download-html-summary").after(h)}).always(function(){try{return $("#download-html-file #pdf-download-placeholder").remove()}catch(a){}})}),c.postMessage(b)}).fail(function(){return stopLoadError("There was a problem communicating with the server. Please try again later.")})}).fail(function(){return stopLoadError("Unable to fetch styles for printout"),!1}),!1},showDownloadChooser=function(){var a;return a='<paper-dialog id="download-chooser" modal>\n  <h2>Select Download Type</h2>\n  <paper-dialog-scrollable class="dialog-content">\n    <p>\n      Once you select a file type, it will take a moment to prepare your download. Please be patient.\n    </p>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button dialog-dismiss>Cancel</paper-button>\n    <paper-button dialog-confirm id="initiate-csv-download">CSV/SQL</paper-button>\n    <paper-button dialog-confirm id="initiate-html-download">HTML/PDF</paper-button>\n  </div>\n</paper-dialog>',$("#download-chooser").exists()||$("body").append(a),$("#initiate-csv-download").click(function(){return downloadCSVList()}),$("#initiate-html-download").click(function(){return downloadHTMLList()}),safariDialogHelper("#download-chooser"),!1};
//# sourceMappingURL=download.min.js.map