var executeQuery,getTerminalDependencies,loadTerminalDialog,parseQuery,slice=[].slice;loadTerminalDialog=function(e){return null==e&&(e=!1),getTerminalDependencies(function(){var r;return $("#sql-query-dialog").exists()||e||(r='<paper-dialog id="sql-query-dialog" modal>\n  <paper-dialog-scrollable>\n    <div class="row query-container">\n      <form class="form">\n        <div class="form-group">\n          <textarea id="sql-input"\n                    rows="5"\n                    class="form-control"\n                    placeholder="SQL query here"\n                    autofocus></textarea>\n          <p class="text-muted">\n            <strong>Tip:</strong> Use <kbd>@@</kbd> to represent the database table and <kbd>!@</kbd> to represent <code class="language-null">SELECT * FROM table</code>. You can search columns using DarwinCore or columns specified in Github.\n          </p>\n        </div>\n      </form>\n      <p class="col-xs-12">Interpreted Query:</p>\n      <code class="language-sql col-xs-11 col-xs-offset-1" id="interpreted-sql"></code>\n    </div>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button id="clear-sql-results">Clear Results</paper-button>\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>',$("body").append(r),$("#sql-query-dialog").find("form").submit(function(e){return e.preventDefault(),executeQuery(),!1}),$("#sql-input").keydown(function(e){if(13===(e.keyCode?e.keyCode:e.which))return e.preventDefault(),executeQuery(),!1}),$("#sql-input").keyup(function(e){return 13!==(e.keyCode?e.keyCode:e.which)&&parseQuery(this),!0}),$("#clear-sql-results").click(function(){return $("#sql-results").remove(),!1})),p$("#sql-query-dialog").open()}),!1},getTerminalDependencies=function(){var e,r,n,t,s;return r=arguments[0],e=2<=arguments.length?slice.call(arguments,1):[],!0===_asm.terminalDependencies&&(console.log("Dependencies are already loaded, executing immediately"),"function"==typeof r&&r.apply(null,e)),t={nacl:!1,prism:!1},_asm.terminalDependencies=!1,_asm.terminalDependenciesChecking=!1,n=function(){var s,a,l;if(!0===_asm.terminalDependencies)return!0;if(_asm.terminalDependenciesChecking)return delay(50,function(){return n()}),!1;_asm.terminalDependenciesChecking=!0,a=!0;for(s in t)if(l=t[s],!(a=a&&l)){console.log("Library "+s+" isn't yet ready...");break}return _asm.terminalDependencies=a,_asm.terminalDependenciesChecking=!1,a&&(console.log("Dependencies loaded"),"function"==typeof r&&r.apply(null,e)),a},s=function(){return nacl_factory.instantiate(function(e){return _asm.nacl=e,t.nacl=!0,n()})},"undefined"==typeof nacl_factory||null===nacl_factory?loadJS("bower_components/js-nacl/lib/nacl_factory.js",function(){return s()}):s(),loadJS("bower_components/prism/prism.js",function(){return loadJS("bower_components/prism/components/prism-sql.js",function(){return t.prism=!0,loadJS("bower_components/prism/components/prism-json.js"),n(),!1}),$("head").append('<link href="bower_components/prism/themes/prism.css" rel="stylesheet" />')}),!1},parseQuery=function(e,r){var n,t;return null==e&&(e="#sql-input"),null==r&&(r="#interpreted-sql"),t=$(e).val().trim(),t=t.replace(/@@/gim,"`mammal_diversity_database`"),t=t.replace(/!@/gim,"SELECT * FROM `mammal_diversity_database`"),n=$(r).get(0),$(n).text(t),Prism.highlightElement(n),t},executeQuery=function(){var e,r,n,t;n=function(e){var r,n,t;null==e&&(e="Error");try{r=_asm.nacl.decode_utf8(_asm.nacl.crypto_hash_string(e+Date.now()))}catch(e){n=e,console.warn(n.message),console.warn(n.stack),r="sql-query-alert"}return t='<div class="alert alert-danger alert-dismissable col-xs-8 col-offset-xs-2 center-block clear clearfix" role="alert" id="'+r+'">\n  <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n  <div class="alert-message">'+e+"</div>\n</div>",$("#sql-input").parents("paper-dialog").find(".alert").remove(),$("#sql-input").parents("form").after(t),stopLoadError(),!1};try{r=p$("#dwc-only").checked}catch(e){}return t=parseQuery(),isNull(t)?n("Sorry, you can't use an empty query"):(e={sql_query:post64(t),action:"query",dwc:null!=r&&r},console.debug("Posting to target",uri.urlString+"api.php?"+buildQuery(e)),$.post(uri.urlString+"api.php",buildQuery(e,"json")).done(function(e){var r,t,s,a,l,o,i,c,u,d,p,m,f,y,g,h,b,q,v,_,k;console.log("Got result",e),$("#sql-results").remove();try{null!=e.statements&&(k=Object.toArray(e.statements))}catch(e){}if(!0!==e.status){if(isNull(e.statement_count))return r=null!=(f=null!=(y=e.error)?y:e.human_error)?f:"UNKNOWN_ERROR",n(r);for(l=0,u=k.length;l<u;l++)if("ERROR"===(_=k[l]).result)return t="Your query <code class='language-sql'>"+_.provided+"</code> ",!0!==_.error.safety_check?t+="failed a safety check.":!1===_.error.sql_response?t+="has or generated during parsing a syntax error.<br/><br/>If you believe your syntax to be valid, try simplifying it as we strictly limit the types of queries accessible here.":_.error.was_server_exception?t+="generated a problem on the server and was refused to be executed. Please report this.":t+="gave <code>UNKNOWN_QUERY_ERROR</code>",t+="<br/><br/>Execution of your query was halted here.",n(t)}for($("#sql-input").parents("paper-dialog").find(".alert").remove(),s='<div id="sql-results" class="sql-results col-xs-12">\n</div>',$("#interpreted-sql").exists()?$("#interpreted-sql").after(s):$("#sql-input").parents("form").after(s),v=[],a=0,i=0,d=k.length;i<d;i++)if(_=k[i],0===(g=Object.toArray(_.result)).length)q="<code>ZERO_RESULTS</code>",v.push(q);else for(++a,o=0,m=0,p=g.length;m<p;m++){h=g[m],++o;try{b=JSON.stringify(h),b=b.replace(/,"/gim,', "'),c="json"}catch(e){b="Unable to parse row",c="text"}q="<div>\n  "+a+"."+o+':\n  <code class="language-'+c+'">'+b+"</code>\n</div>",v.push(q)}return $("#sql-results").html(v.join("<br/><br/>")),Prism.highlightAll(),!1}).fail(function(e,r){return console.error(e,r),console.warn("Couldn't hit target"),n("Problem talking to the server, please try again"),!1}),!1)},$(function(){var e;return e='<paper-icon-button icon="icons:code" id="launch-term" title="Directly Query Database" data-toggle="tooltip">\n</paper-icon-button>',$("#git-footer").append(e),$("#launch-term").click(function(){return loadTerminalDialog.debounce()}),!1});
//# sourceMappingURL=terminal.min.js.map